
"""
    fundamentals(api_key)

Download the CORE US Fundamentals dataset from Sharadar via Quandl.

Equity fundamentals data. Equity fundamentals are financial statement
information (cash flow, earnings statements, balance sheets).

To see an example, [here](https://uk.finance.yahoo.com/quote/MANU/financials?p=MANU) you can find the fundamentals data for Manchester United
football club (MANU).

# Examples
```julia-repl
julia> api_key = "-31swyRz8v4SoNL_zyYc"
julia> fundamentals(api_key)

```

# Related data

The dataset generated by `fundamentals` lists firms by their stock tickers
(`AAPL` instead of Apple), and uses short codes to indicate the fundamentals
(`rnd` instead of Research and Development).

To download descriptions of the indicator codes, use
```julia-repl
julia> fundamental_indicators(api_key)

```
Or if you just need to know a couple of indicators, go directly to the table
[here](https://www.quandl.com/tables/SF1/SHARADAR-INDICATORS)

To download a database of the tickers, company names and other information
including industry and listing status, use
```julia-repl
julia> tickers(api_key)

```
"""
function fundamentals(api_key)
    url  = "https://www.quandl.com/api/v3/datatables/SHARADAR/SF1.csv?&qopts.export=true&dimension=MRY&api_key="
    println("Downloading the following data:")
    println("Dataset: Sharadar CORE US Equities Bundle")
    println("Table:   CORE US Fundamentals")
    println("Source:  Quandl")
    println("URL:     https://www.quandl.com/tables/SFA/SHARADAR-SF1")
    try
        println("Generating download link")
        df_  = CSV.File(HTTP.get(url*api_key).body) |> DataFrame
        url_ = df_[!,Symbol("file.link")][1]
        println("Downloading the dataset")
        zip_response = HTTP.get(url_)
        zip_data = InfoZIP.open_zip(zip_response.body)
        s = zip_data[zip_data.keys[1]];
        df = CSV.File(IOBuffer(s)) |> DataFrame
        return df
    catch
        println("I couldn't download the dataset. This could be due to one of the ")
        println("following issues:")
        println("")
        println(" 1. Make sure that you provide your API key, with double quote")
        println("    marks as follows:")
        println("          fundamentals(\"api_key_goes_here\")")
        println("    Your API key will look something like -31swyRz8v4SoNL_zyYc ")
        println("    If you haven't received an API key for Quandl, inform your ")
        println("    instructor.")
        println(" 2. Make sure that you're connected to the internet.")
        println(" 3. Make sure that you can login to Quandl.com. ")
        println("    Check by going to the following URL:")
        println("    https://www.quandl.com/databases/SFA/data")
        println("    and check that you can open the datasets in your browser.")
    end
end


function fundamentals()
    println("Please provide your Quandl API key as an argument to the function:")
    println("      fundamentals(\"api_key_goes_here\")")
    println("Your API key will look something like -31swyRz8v4SoNL_zyYc ")
    println("Make sure that you include the double quote marks as above.")
end


"""
    events(api_key)

Download the CORE US Fundamentals Events dataset from Sharadar via Quandl.

Equity events data. Equity events relate to SEC filings, where companies
publicly announce major events including financial restatements, missed
debt payments and so on.

# Examples
```julia-repl
julia> api_key = "-31swyRz8v4SoNL_zyYc"
julia> events(api_key)

```

# Related data

The dataset generated by `events` lists firms by their stock tickers
(`AAPL` instead of Apple), and uses short codes to indicate the events
(`13` instead of Bankruptcy or Receivership).

A full list of event codes can be found [here](https://www.sec.gov/fast-answers/answersform8khtm.html).

To download a database of the tickers, company names and other information
including industry and listing status, use
```julia-repl
julia> tickers(api_key)

```
"""
function events(api_key)
    url  = "https://www.quandl.com/api/v3/datatables/SHARADAR/EVENTS.csv?&qopts.export=true&api_key="
    println("Downloading the following data:")
    println("Dataset: Sharadar CORE US Equities Bundle")
    println("Table:   CORE US Fundamentals Events")
    println("Source:  Quandl")
    println("URL:     https://www.quandl.com/tables/SFA/SHARADAR-EVENTS")
    try
        println("Generating download link")
        df_  = CSV.File(HTTP.get(url*api_key).body) |> DataFrame
        url_ = df_[!,Symbol("file.link")][1]
        println("Downloading the dataset")
        zip_response = HTTP.get(url_)
        zip_data = InfoZIP.open_zip(zip_response.body)
        s = zip_data[zip_data.keys[1]];
        df = CSV.File(IOBuffer(s)) |> DataFrame
        df[!, :eventcodes] = split.(df[:,:eventcodes], '|');
        df = flatten(df, :eventcodes)
        return df
    catch
        println("I couldn't download the dataset. This could be due to one of the ")
        println("following issues:")
        println("")
        println(" 1. Make sure that you provide your API key, with double quote")
        println("    marks as follows:")
        println("          events(\"api_key_goes_here\")")
        println("    Your API key will look something like -31swyRz8v4SoNL_zyYc ")
        println("    If you haven't received an API key for Quandl, inform your ")
        println("    instructor.")
        println(" 2. Make sure that you're connected to the internet.")
        println(" 3. Make sure that you can login to Quandl.com. ")
        println("    Check by going to the following URL:")
        println("    https://www.quandl.com/tables/SFA/SHARADAR-EVENTS")
        println("    and check that you can open the datasets in your browser.")
    end
end


function events()
    println("Please provide your Quandl API key as an argument to the function:")
    println("      events(\"api_key_goes_here\")")
    println("Your API key will look something like -31swyRz8v4SoNL_zyYc ")
    println("Make sure that you include the double quote marks as above.")
end


function splitrows(df_::DataFrame,col::Symbol,delim::Char;sortcols=names(df_))
    df = deepcopy(df_)
    while .!isnothing.(findfirst.(delim,df[:,col])) |> sum > 0
        filter  = isnothing.(findfirst.(delim,df[:,col]))
        df_temp = df[.!filter,:]
        df      = df[filter,:]
        n = size(df_temp)[1]
        for i in 1:n
            values_ = df_temp[i,col]
            delim_index = findfirst(delim,values_)
            df_temp[i,col] = values_[1:(delim_index-1)]
            push!(df_temp,
                (ticker     = df_temp[i,:ticker],
                 date       = df_temp[i,:date],
                 eventcodes = values_[(delim_index+1):end]))
        end
        df = vcat(df,df_temp)
    end
    sort!(df,sortcols)
    return df
end


function splitrows_(df_::DataFrame,col::Symbol,delim::Char;sortcols=names(df_))
    df = deepcopy(df_)
    df[!, col] = split.(df[:,col], delim);
    df = flatten(df, col)
    return df
end


"""
    metadata(api_key)

Download the Tickers and Metadata dataset from Sharadar via Quandl.

Metadata includes stock tickers, company names, industry codes, and related
information.

# Examples
```julia-repl
julia> api_key = "-31swyRz8v4SoNL_zyYc"
julia> metadata(api_key)

```
"""
function metadata(api_key)

    url  = "https://www.quandl.com/api/v3/datatables/SHARADAR/TICKERS.csv?&qopts.export=true&api_key="
    println("Downloading the following data:")
    println("Dataset: Sharadar CORE US Equities Bundle")
    println("Table:   Tickers and Metadata")
    println("Source:  Quandl")
    println("URL:     https://data.nasdaq.com/tables/SFA/SHARADAR-TICKERS")
    try
        println("Generating download link")
        df_  = CSV.File(HTTP.get(url*api_key).body) |> DataFrame
        url_ = df_[!,Symbol("file.link")][1]
        println("Downloading the dataset")
        zip_response = HTTP.get(url_)
        zip_data = InfoZIP.open_zip(zip_response.body)
        s = zip_data[zip_data.keys[1]];
        df = CSV.File(IOBuffer(s)) |> DataFrame
        return df
    catch
        println("I couldn't download the dataset. This could be due to one of the ")
        println("following issues:")
        println("")
        println(" 1. Make sure that you provide your API key, with double quote")
        println("    marks as follows:")
        println("          metadata(\"api_key_goes_here\")")
        println("    Your API key will look something like -31swyRz8v4SoNL_zyYc ")
        println("    If you haven't received an API key for Quandl, inform your ")
        println("    instructor.")
        println(" 2. Make sure that you're connected to the internet.")
        println(" 3. Make sure that you can login to Quandl.com. ")
        println("    Check by going to the following URL:")
        println("    https://www.quandl.com/databases/SFA/data")
        println("    and check that you can open the datasets in your browser.")
    end
end


function metadata()
    println("Please provide your Quandl API key as an argument to the function:")
    println("      metadata(\"api_key_goes_here\")")
    println("Your API key will look something like -31swyRz8v4SoNL_zyYc ")
    println("Make sure that you include the double quote marks as above.")
end


"""
    stockprices(api_key)

Download the Equity Prices dataset from Sharadar via Quandl.


# Examples
```julia-repl
julia> api_key = "-31swyRz8v4SoNL_zyYc"
julia> stockprices(api_key)

```
"""

function stockprices(api_key)

    url  = "https://www.quandl.com/api/v3/datatables/SHARADAR/SEP.csv?&qopts.export=true&api_key="
    println("Downloading the following data:")
    println("Dataset: Sharadar CORE US Equities Bundle")
    println("Table:   Equity Prices")
    println("Source:  Quandl")
    println("URL:     https://data.nasdaq.com/tables/SFA/SHARADAR-SEP")
    println("This will take a few minutes.")
    try
        println("Generating download link")
        df_  = CSV.File(HTTP.get(url*api_key).body) |> DataFrame
        url_ = df_[!,Symbol("file.link")][1]
        println("Downloading the dataset")
        zip_response = HTTP.get(url_)
        zip_data = InfoZIP.open_zip(zip_response.body)
        s = zip_data[zip_data.keys[1]];
        df = CSV.File(IOBuffer(s)) |> DataFrame
        return df
    catch
        println("I couldn't download the dataset. This could be due to one of the ")
        println("following issues:")
        println("")
        println(" 1. Make sure that you provide your API key, with double quote")
        println("    marks as follows:")
        println("          stockprices(\"api_key_goes_here\")")
        println("    Your API key will look something like -31swyRz8v4SoNL_zyYc ")
        println("    If you haven't received an API key for Quandl, inform your ")
        println("    instructor.")
        println(" 2. Make sure that you're connected to the internet.")
        println(" 3. Make sure that you can login to Quandl.com. ")
        println("    Check by going to the following URL:")
        println("    https://www.quandl.com/databases/SFA/data")
        println("    and check that you can open the datasets in your browser.")
    end
end


function stockprices()
    println("Please provide your Quandl API key as an argument to the function:")
    println("      stockprices(\"api_key_goes_here\")")
    println("Your API key will look something like -31swyRz8v4SoNL_zyYc ")
    println("Make sure that you include the double quote marks as above.")
end
